{% import '::macro.html.twig' as m %}
<div class="modal-body movebottom">
    <div class="container">
        <div class="row">
            <div class="col-sm-10 col-sm-offset-1 col-xs-12 col-xs-offset-0">
                <h2> {{ 'admin.edit.mainTitle.editJobHunt'| trans }}</h2>
                <div class="row">
                    <div class="col-md-12">
                        {{ form_start(form) }}
                        <div class="form-group">
                            {{ form_row(form.name) }}
                        </div>
                        <div class="form-group">
                            {{ form_row(form.url) }}
                        </div>
                        <div class="form-group">
                            {{ form_row(form.intervalDays,{'id' : 'interval'}) }}
                        </div>
                        <div class="form-group">
                            {{ form_row(form.description) }}
                        </div>
                        <div class="form-inline ">
                            {{ form_widget(form.submit,{'attr':{'class':'btn btn-inverse-primary btn btn-inverse btn-primary btn-update-modal'} }) }}
                            {{ form_end(form) }}

                            {% if delete %}
                                {{ form_start(delete,{'attr': {'id': 'theaterjobs_adminbundle_jobhunt_delete'}}) }}
                                {{ form_widget(delete.submit,{'attr':{'class':'jobdeletebtn btn-inverse'}}) }}
                                {{ form_end(delete) }}
                            {% endif %}

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>

<script>

    {% if form.intervalDays.vars.value  and form.intervalDays.vars.value not in job_hunt_interval %}
    {% set job_hunt_interval = job_hunt_interval|merge([form.intervalDays.vars.value]) %}
    {% endif %}

    $("#interval").select2({
        createSearchChoice: function (term, data) {
            if ($(data).filter(function () {
                return this.text.localeCompare(term) === 0;
            }).length === 0) {
                return {
                    id: term,
                    text: term
                };
            }
        },
        multiple: false,
        selectOnBlur: true,
        data: [
            {% for interval in job_hunt_interval|sort %}
            {
                id: {{ interval }},
                text: '{{ interval }}'
            },
            {% endfor %}
        ]
    });

    var formJobHunt = $('form[name="theaterjobs_adminbundle_jobhunt"]');
    var formJobHuntDelete = $("#theaterjobs_adminbundle_jobhunt_delete");

    $(function () {
        formJobHunt.validate({
            errorPlacement: function (error, element) {
                toolTipError(error.text(), element);
            },
            ignore: []
        });
        validFormInputs();

        formJobHunt.submit(function (e) {
            e.preventDefault();
            $.ajax({
                type: $(this).attr('method'),
                url: $(this).attr('action'),
                data: $(this).serialize(),
                success: function (data) {
                    if (data.success) {
                        $('input:text', adminSearchForm).val('');
                        dataTableReload();
                    }
                },
                error: () => {
                    serverError();
                }
            }).done(function () {
                $('#myModal').modal('hide');
            });
        });

        formJobHuntDelete.submit(function (e) {
            e.preventDefault();
            bootbox.confirm({
                message: "Are you sure do you really want to delete this?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        $.ajax({
                            type: formJobHuntDelete.attr('method'),
                            url: formJobHuntDelete.attr('action'),
                            data: formJobHuntDelete.serialize(),
                            success: function (data) {
                                if (data.success) {
                                    $('input:text', adminSearchForm).val('');
                                    dataTableReload();
                                }
                            },
                            error: () => {
                                serverError();
                            }
                        }).done(function () {
                            $('#myModal').modal('hide');
                        });
                    }
                }
            });
        });
    });


</script>